{"version":3,"sources":["components/LoginForm.js","components/RegisterForm.js","components/Navbar.js","components/NavbarBottom.js","components/CategoryNav.js","images/magn-glass.jpg","components/dashboard.js","components/ResetForm.js","components/EditBio.js","components/boot.js","components/PasswordReset.js","components/Profile.js","components/PublicRoute.js","components/PrivateRoute.js","components/ifgamejs.js","components/ifgame.js","components/changefontsize.js","components/ifcode.js","components/Shell.js","components/dictcode.js","components/DictGameLogic.js","components/DictGame.js","App.js","index.js"],"names":["LoginForm","useState","name","email","password","details","setDetails","error","setError","isChecked","setIsChecked","history","useHistory","className","onSubmit","e","preventDefault","Axios","post","rememberMe","then","response","data","message","localStorage","setItem","username","accessToken","refreshToken","push","window","location","reload","htmlFor","type","id","onChange","target","value","required","href","style","display","float","width","defaultChecked","to","RegisterForm","password_2nd","placeholder","Navbar","getItem","NavbarBottom","CategoryNav","document","querySelector","addEventListener","arrow","categoryNumber","direction","i","forms","category","categoryName","getElementById","getElementsByTagName","length","action","firstChild","innerHTML","Dashboard","leaderboard","setLeaderboard","getLeaderboard","a","fetch","json","jsonData","console","log","useEffect","map","entry","points","src","magnGlass","alt","ResetForm","success","setPageStatus","oldpassword","newpassword","onClick","BioForm","bio","Form","Group","controlId","Label","Control","as","rows","Settinglist","General","uname","pageStatus","setSuccess","Container","Row","Col","md","span","offset","Button","variant","token","Notifs","Privacy","Settings","setUname","setEmail","date","setDate","sm","xs","attribution","Tab","defaultActiveKey","ListGroup","Item","eventKey","Content","Pane","PasswordReset","submitHandler","resetPass","Profile","setBio","get","title","cx","cy","r","PublicRoute","Component","component","restricted","rest","isLogin","props","PrivateRoute","IfGameJS","on_front_wall","on_bottom_wall","robot_default","game_status","go_button","disabled","front_wall_code","bottom_wall_code","default_code","code_output","code_elements","code","visibility","printCode","game_grid","position_array","childNodes","num_positions","childElementCount","num_rows","Math","sqrt","num_columns","hpos","vpos","goal_pos","level_goal_positions","moves","robot_array_pos","level_start_positions","robot_start_pos","moveRobot","clearInterval","setInterval","attempts","robotGo","parentNode","robotRestart","getComputedStyle","changeCodeVisibility","IfGame","ChangeFontSize","sizebtns","querySelectorAll","changefontSize","fsize","pars","codesnips","fontSize","IfCodeSnippets","Shell","_setCursorPositions","nameRef","current","selectionStart","cursor","selectionEnd","handleInputChange","key","val","setState","handleFailClose","handleFailShow","handleSuccessClose","handleSuccessShow","DisplayOutput","output","Submit","state","attempt","script","check","Test","question","fail","React","createRef","this","starter","Modal","show","onHide","Header","closeButton","Title","Body","Footer","noGutters","ref","autoComplete","options","mode","theme","lineNumbers","indentWithTabs","smartIndent","onBeforeChange","editor","cursorCoords","getValue","DictionaryCodeSnippets","nodeTypes","GameRestart","GenerateDict","dictCtr","numNodes","j","rand","block","blockId","node","currentCtr","nodeType","columns","floor","random","createElement","createNode","appendChild","imgNode","charAt","toUpperCase","slice","modifyKeyValue","clearGameStatus","keySelect","valSelect","keyClass","selectedIndex","toLowerCase","valClass","keyColumn","valColumn","modifyStatus","keyIndex","valNode","keyNode","trim","newKeyBlock","valBlock","PrintCodeLine","CheckIfWon","onWon","textContent","removeKey","removeStatus","removeChild","userDictKeys","solDictKeys","userDictVals","solDictVals","modifyKeySubmit","removeKeySubmit","addKeySelect","addValSelect","removeKeySelect","removeEventListener","gameStatusTags","codeLine","codeOutput","preTag","codeTag","ChangeCodeVisibility","DictGame","option","selectLists","selectList","GameSetup","textDecoration","App","Logout","clear","paddingTop","height","exact","path","ifgame","DictCodeSnippets","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1328f4f3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../css/index.css\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction LoginForm() {\n  const [details, setDetails] = useState({ name: \"\", email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(true);\n  let history = useHistory();\n\n  const Login = (e) => {\n    e.preventDefault();\n    Axios.post(\"/login\", {\n      email: details.email,\n      password: details.password,\n      rememberMe: isChecked,\n    }).then((response) => {\n      if (response.data.message) {\n        //setLoginStatus(response.data.message);\n        setError(response.data.message);\n      } else {\n        //set all the values in the local storage\n        localStorage.setItem(\"username\", response.data.username);\n        localStorage.setItem(\"email\", details.email);\n        localStorage.setItem(\"isLogin\", true);\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        localStorage.setItem(\"refreshToken\", response.data.refreshToken);\n        localStorage.setItem(\"rememberMe\", isChecked);\n        setError(\"\");\n        history.push(\"/\");\n        window.location.reload(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={Login}>\n        <div className=\"form-inner\">\n          <h2 className=\"form-group\">Login</h2>\n          {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) =>\n                setDetails({ ...details, email: e.target.value })\n              }\n              value={details.email}\n              required\n            />\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={(e) =>\n                setDetails({ ...details, password: e.target.value })\n              }\n              value={details.password}\n              required\n            />\n            <span>\n              Forgot <a href=\"forgotPassword.html\">password?</a>\n            </span>\n            <label style={{ display: \"inline \", float: \"right\" }}>\n              <input\n                style={{\n                  width: \"20px\",\n                  display: \"inline\",\n                }}\n                type=\"checkbox\"\n                defaultChecked={isChecked}\n                onChange={() => setIsChecked(!isChecked)}\n              />\n              Remember Me\n            </label>\n          </div>\n          <input type=\"submit\" value=\"LOGIN\" />\n          <Link to=\"/\">\n            <button className=\"register\">CANCEL</button>\n          </Link>\n          <span className=\"form-group\">\n            Don't have an account? <Link to=\"/signup\">SIGN UP</Link>\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../css/index.css\";\nfunction RegisterForm() {\n  const [error, setError] = useState(\"\");\n  let history = useHistory();\n  const [details, setDetails] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password_2nd: \"\",\n  });\n\n  const register = (e) => {\n    e.preventDefault();\n    Axios.post(\"/users\", {\n      username: details.username,\n      email: details.email,\n      password: details.password,\n      password_2nd: details.password_2nd,\n    }).then((response) => {\n      if (response.data.message) {\n        //setLoginStatus(response.data.message);\n        setError(response.data.message);\n      } else {\n        localStorage.setItem(\"username\", details.username);\n        localStorage.setItem(\"email\", details.email);\n        localStorage.setItem(\"isLogin\", true);\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        localStorage.setItem(\"refreshToken\", response.data.refreshToken);\n        setError(\"\");\n        history.push(\"/\");\n      }\n    });\n  };\n  return (\n    <div className=\"App\">\n      <form onSubmit={register}>\n        <div className=\"form-inner\">\n          <h2 className=\"form-group\">Register</h2>\n          {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              placeholder=\" Enter Name\"\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              onChange={(e) =>\n                setDetails({ ...details, username: e.target.value })\n              }\n              value={details.username}\n              required\n            />\n\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              placeholder=\" Enter Email\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) =>\n                setDetails({ ...details, email: e.target.value })\n              }\n              value={details.email}\n              required\n            />\n\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              placeholder=\" Enter Password\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={(e) =>\n                setDetails({ ...details, password: e.target.value })\n              }\n              value={details.password}\n              required\n            />\n            <label htmlFor=\"password\">Re-enter Password:</label>\n            <input\n              placeholder=\" Re-enter Enter Password\"\n              type=\"password\"\n              name=\"password_2nd\"\n              id=\"password_2nd\"\n              onChange={(e) =>\n                setDetails({ ...details, password_2nd: e.target.value })\n              }\n              value={details.password_2nd}\n              required\n            />\n          </div>\n          <input type=\"submit\" value=\"REGISTER\" />\n          <Link to=\"/\">\n            <button className=\"register\">CANCEL</button>\n          </Link>\n          <span className=\"form-group\">\n            Already have an account? <Link to=\"/login\">SIGN IN</Link>\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport \"../css/nav.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbarr topnav\">\n      <nav className=\"topnav\">\n        <div>\n          {localStorage.getItem(\"isLogin\") ? (\n            <div className=\"signin\">\n              <div className=\"navbar-dropdown\">\n                <a>{localStorage.getItem(\"username\")}</a>\n                <div className=\"navbar-dropdown-elements\">\n                  <Link to=\"/profile\">Profile</Link>\n                  <Link to=\"/settings\">Account Settings</Link>\n                  <Link to=\"/logout\"> Logout</Link>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"signin\">\n              <Link to=\"/signup\"> Create Account </Link>\n              <Link to=\"/login\"> Sign in </Link>\n            </div>\n          )}\n\n          <Link to={\"/dashboard\"}> Dashboard </Link>\n          <Link to=\"/contact\"> Contact </Link>\n          <Link to={\"/about\"}> About </Link>\n          <Link to=\"/\"> Home </Link>\n          <div className=\"logo\">\n            <Link className=\"links\" to=\"/\">\n              DreamCode\n            </Link>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../css/nav.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavbarBottom() {\n  return (\n    <div className=\" bottomnav\">\n      <nav>\n        <div>\n          <Link to=\"./pages/contact.html\"> Contact </Link>\n          <Link to=\"./pages/about.html\"> About </Link>\n          <Link to=\"index.html\"> Home </Link>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default NavbarBottom;\n","const CategoryNav = () => {\n\t\n\t//Add onclick listeners\n\tdocument.querySelector(\".arrow.left\").addEventListener('click', ()=>{arrow(0);});\n\tdocument.querySelector(\".arrow.right\").addEventListener('click', ()=>{arrow(1);});\n\n\tvar categoryNumber = 1;\n\tvar maxCategory = 10; //When we have a database, we'll pull the number of categories from there\n\t\n\tfunction arrow(direction) {\n\t\tvar i = 0;\n\t\tvar forms = [];\n\t\tvar category = [];\n\t\tvar categoryName = \"\";\n\t\tif (direction === 1 && categoryNumber < maxCategory) { //forwards\n\t\t\tcategoryNumber++;\n\t\t}\n\t\telse if (direction === 0 && categoryNumber > 1) { //backwards\n\t\t\tcategoryNumber--;\n\t\t}\n\t\telse { //cannot go past max category or under category 1\n\t\t\treturn;\n\t\t}\n\t\tcategory = document.querySelector(\".category\");\n\t\tcategoryName = document.getElementById(\"js-category-name\");\n\t\tforms = category.getElementsByTagName(\"form\");\n\t\tfor (i = 0; i < forms.length; i++) {\n\t\t\tforms[i].action=\"category\"+categoryNumber+\"/game\"+(i+1)+\".html\";\n\t\t\tforms[i].firstChild.value = \"CATEGORY\"+categoryNumber+\" GAME\"+(i+1); \n\t\t}\n\t\tcategoryName.innerHTML = \"CATEGORY\"+categoryNumber;\n\t\treturn;\n\t}\n}\n\nexport default CategoryNav;\n\n","export default __webpack_public_path__ + \"static/media/magn-glass.4b8d2b26.jpg\";","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"../css/nav.css\";\nimport \"../css/dashboard-style.css\";\nimport CategoryNav from './CategoryNav';\nimport magnGlass from \"../images/magn-glass.jpg\";\n\nconst Dashboard = () => {\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  const getLeaderboard = async () => {\n    try {\n      //Change IP to the IP of the machine hosting the API\n      const response = await fetch(\"/leaderboard\");\n      const jsonData = await response.json();\n      setLeaderboard(jsonData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getLeaderboard();\n    CategoryNav();\n  }, []);\n\n  return (\n    <Fragment className=\"dashboard navbar\">\n      <title> Dashboard </title>\n      <body className=\"dashboard\">\n        <br></br>\n\n        <div id=\"content\">\n          <header> Dashboard </header>\n\n          <form action=\"/Profile\">\n            <input type=\"submit\" id=\"profile\" value=\"PROFILE\" />\n          </form>\n          <div id=\"leaderboard\">\n            LEADERBOARD\n            <ol>\n              {leaderboard.map((entry, i) => (\n                <li key={i}>{entry.username + \" \" + entry.points + \"XP\"}</li>\n              ))}\n            </ol>\n          </div>\n          <form action=\"/shell\">\n            <input\n              type=\"submit\"\n              className=\"daily-challenge\"\n              value=\"DAILY CHALLENGE\"\n            />\n          </form>\n          <br></br>\n          <h1>GAMES</h1>\n          <form action=\"/dashboard\">\n            <input\n              type=\"text\"\n              name=\"search-bar\"\n              className=\"search-bar\"\n              placeholder=\"Search Bar\"\n            />\n            <input\n              type=\"image\"\n              name=\"submit\"\n              src={magnGlass}\n              className=\"search-button\"\n              alt=\"submit\"\n            />\n          </form>\n          <div className=\"dropdown\">\n            SELECT OPTION\n            <div className=\"dropdown-elements\">\n              <a href=\"./\">Option 1</a>\n              <a href=\"./\">Option 2</a>\n              <a href=\"./\">Option 3</a>\n            </div>\n          </div>\n          <h2>Sort by</h2>\n          <br></br>\n          <hr />\n          <div className=\"continue-game\">\n            <form action=\"/ifcode\">\n              <input\n                type=\"submit\"\n                className=\"continue\"\n                value=\"CONTINUE PLAYING: Learn If Statements\"\n              />\n            </form>\n          </div>\n          <div className=\"category\">\n            <i className=\"arrow left\"></i>\n            <div id=\"js-category-name\">CATEGORY1</div>\n            <i className=\"arrow right\"></i>\n\n            <form action=\"helloworld.html\">\n              <input type=\"submit\" className=\"game\" value=\"Hello World Game\" />\n            </form>\n\n            <form action=\"python-problem-repository.html\">\n              <input\n                type=\"submit\"\n                className=\"game\"\n                value=\"Python Problem Repository\"\n              />\n            </form>\n\n            <form action=\"/dictcode\">\n              <input type=\"submit\" className=\"game\" value=\"Python Dictionaries\" />\n            </form>\n\n            <form action=\"category1/game4.html\">\n              <input type=\"submit\" className=\"game\" value=\"CATEGORY1 GAME4\" />\n            </form>\n\n            <form action=\"category1/game5.html\">\n              <input type=\"submit\" className=\"game\" value=\"CATEGORY1 GAME5\" />\n            </form>\n          </div>\n        </div>\n      </body>\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\n\nfunction ResetForm({ type, error, success, setPageStatus }) {\n  const [details, setDetails] = useState({ name: \"\", email: \"\", oldpassword: \"\",newpassword: \"\" });\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    type(details);\n  };\n  const cancelHandler = (e) => {\n    e.preventDefault();\n    setPageStatus(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-inner\">\n        <h2>Change Password</h2>\n        {success !== \"\" ? <div className=\"error success\">{success}</div> : \"\"}\n        {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            placeholder=\"Enter Name\"\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => setDetails({ ...details, name: e.target.value })}\n            value={details.name}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Enter current Password:</label>\n          <input\n            placeholder=\"Enter current password\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            onChange={(e) =>\n              setDetails({ ...details, oldpassword: e.target.value })\n            }\n            value={details.oldpassword}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Enter New Password:</label>\n          <input\n            placeholder=\"Enter new password\"\n            type=\"password\"\n            name=\"newpassword\"\n            id=\"newpassword\"\n            onChange={(e) =>\n              setDetails({ ...details, newpassword: e.target.value })\n            }\n            value={details.newpassword}\n            required\n          />\n        </div>\n        <input type=\"submit\" value=\"UPDATE PASSWORD\" />\n        <button className=\"register\" onClick={cancelHandler}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ResetForm;\n","import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\n\n\nfunction BioForm({ type, error, success, setPageStatus }) {\n  const [details, setDetails] = useState({ name: \"\", bio: \"\" });\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    type(details);\n  };\n  const cancelHandler = (e) => {\n    e.preventDefault();\n    setPageStatus(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-inner\">\n        <h2>Edit Bio</h2>\n        {success !== \"\" ? <div className=\"error success\">{success}</div> : \"\"}\n        {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Username:</label>\n          <input\n            placeholder = \"Enter Username\"\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => setDetails({ ...details, name: e.target.value })}\n            value={details.name}\n            required\n          />\n        </div>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Edit Bio</Form.Label>\n            <Form.Control as=\"textarea\" rows={3}\n                onChange={(e) => setDetails({ ...details, bio: e.target.value })}\n                value={details.bio}\n                required/>\n        </Form.Group>\n        <input type=\"submit\" value=\"Update Bio\"/>\n        <button className=\"register\" onClick={cancelHandler}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default BioForm;\n","import Tab from 'react-bootstrap/Tab'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport ResetForm from \"./ResetForm\";\nimport BioForm from \"./EditBio\";\nimport \"../css/setting-styles.css\";\nimport \"../css/index.css\"\n\nfunction Settinglist() {\n\n    return (\n        <ul className=\"settings setting-list\">            \n                        <li>\n                            <label className=\"mb-3\"> Recieve newsletters\n                                <input className=\"ml-2\" type=\"checkbox\" defaultChecked=\"True\"/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </li>\n                        <li>\n                            <label className=\"mb-2\"> Display name on profile\n                                <input className=\"ml-2 mt-1\" type=\"checkbox\" defaultChecked=\"True\"/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </li>\n                    </ul>\n    )\n}\n\nfunction General({uname,email}) {\n    const [pageStatus, setPageStatus] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n\n\n    const EditBio = (details) => {\n        Axios.post('/EditBio', {\n          bio: details.bio,\n          name: details.name,\n          token: localStorage.getItem(\"username\")\n          ,\n        }).then((response) => {\n            setSuccess(response.data.message);\n            setError(\"\"); \n\n            }, (error) => {\n                console.log(error)\n                setSuccess(\"\");\n                setError(\"Bio error\"); \n            }\n        );\n      }\n    return (\n        <>\n        <Container>\n            <Row>\n                <Col md={5}>\n                    <ul className=\" settings setting-list\">            \n                        <li>USERNAME:</li><p>{uname}</p><br/>\n                        <li>NAME:</li><p>{uname}</p><br/>\n                        <li>EMAIL:</li><p>{email}</p><br/>\n                        <li>BIRTHDAY:</li><p>birthday</p><br/>\n                        <li>PASSWORD:</li><p>*******</p>\n                    </ul>\n                </Col>\n                <Col md={{ span: 5, offset: 1 }} className=\"\">\n                    <Button className=\"mb-1\" onClick={() => pageStatus === \"EditBio\" ? (setPageStatus(\"\")): (setPageStatus(\"EditBio\"))} variant=\"info\">Edit Bio</Button>\n                    <Settinglist/>\n                </Col>\n            </Row>\n        </Container>\n                    {pageStatus === \"EditBio\" ? (\n                        <div className=\"App\">\n                            <BioForm\n                                type={EditBio}\n                                error={error}\n                                success={success}\n                                setPageStatus={setPageStatus}\n                            />\n                        </div>\n                    ) : (\"\")} \n                    \n        </>\n  \n    )\n}\nfunction Notifs() {\n    return (\n        <Container>\n            <Row>\n                <Col md={{ span: 5}}>\n                    <Settinglist/>\n                </Col>\n            </Row>\n        </Container>\n  \n    )\n}\nfunction Privacy() {\n    const [pageStatus, setPageStatus] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n\n    const resetPass = (details) => {\n        Axios.post('/settingPassword', {\n          username: details.name,\n          token: localStorage.getItem(\"username\"),\n          oldpassword: details.oldpassword,\n          newpassword: details.newpassword\n          ,\n        }).then((response) => {\n            setSuccess(response.data.message);\n            setError(\"\"); \n\n            }, (error) => {\n                console.log(error)\n                setSuccess(\"\");\n                setError(\"Username or password incorrect\"); \n            }\n        );\n      }\n\n    return (\n        <>\n        <Container className=\"pb-5\">\n            <Row className=\"pb-5\">\n                <Col md={{ span: 12}}>\n                    <ul className=\"setting-list\">            \n                    <li>FORGOT PASSWORD:</li>\n                    <Button variant=\"danger\" className=\"inline\" onClick={() => pageStatus === \"ResetPassword\" ? (setPageStatus(\"\")): (setPageStatus(\"ResetPassword\"))}>Reset Password</Button>\n                   </ul>\n                </Col>\n            </Row>\n        </Container>\n            {pageStatus === \"ResetPassword\" ? (\n                <div className=\"App\">\n                    <ResetForm\n                        type={resetPass}\n                        error={error}\n                        success={success}\n                        setPageStatus={setPageStatus}\n                    />\n                </div>\n            ) : (\"\")}\n        </>\n  \n    )\n}\n\nfunction Settings () {\n    const [uname, setUname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n\n    const settingInfo = () => {\n        Axios.post('/settingInfo', {\n          token: localStorage.getItem(\"username\")\n          ,\n        }).then((response) => {\n            setUname(response.data.username)\n            setEmail(response.data.email)\n            setDate(response.data.date)\n\n            }, (error) => {\n                console.error(error)\n            }\n        );\n      }\n      settingInfo();\n    return (\n        <Container className=\" settings mt-5\">\n            <Row>\n                <Col md={4} sm={{ span: 12}}>\n                    <h1 id=\"setting-tile\">Account Settings</h1>\n                </Col>\n                <Col md={3} sm={12}>\n                    <div className=\"acc-preview\">\n                        <p className=\"mr-1\" id=\"usr\">{uname} </p>\n                        <p className=\"\"> Member Since {date}</p>\n                    </div>\n                </Col>\n                <Col md={{ span: 3, offset:2}} xs={{span: 4, offset:3}} sm={{span: 4, offset:6}}>\n                    <div attribution= \"Peter Southwood, CC0, via Wikimedia Commons\" id=\"circle\"></div>\n                </Col>\n            </Row>\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"general\">\n                <Row >\n                    <Col sm={4} md={3}>\n                    <ListGroup variant=\"flush\" className=\"rounded\">\n                        <ListGroup.Item eventKey=\"general\" className=\"pb-3\">\n                        General Settings\n                        </ListGroup.Item>\n                        <ListGroup.Item eventKey=\"notif\" className=\"pb-3\">\n                        Notifications\n                        </ListGroup.Item>\n                        <ListGroup.Item eventKey=\"privacy\" className=\"pb-3 mb-5 border-bottom\">\n                        Privacy\n                        </ListGroup.Item>\n                    </ListGroup>\n                    </Col>\n                    <Col sm={{ span: 7, offset: 1}} className=\"mt-5 border \">\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"general\" className=\"mt-5\">\n                                <General uname={uname} email={email}/>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"notif\" className=\"mt-5\">\n                                <Notifs id=\"notif\"/>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"privacy\" className=\"mt-5\">\n                                <Privacy id=\"privacy\"/>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        </Container>\n    )\n}\nexport default Settings","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../css/confirmPasswordReset.css\";\n\nfunction PasswordReset() {\n    const [details, setDetails] = useState({ name: \"\", oldpassword: \"\",newpassword: \"\" });\n\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n\n    const resetPass = (details) => {\n        Axios.post('/settingPassword', {\n          username: details.name,\n          oldpassword: details.oldpassword,\n          newpassword: details.newpassword\n          ,\n        }).then((response) => {\n            setSuccess(response.data.message);\n            setError(\"\"); \n\n            }, (error) => {\n                console.log(error)\n                setSuccess(\"\");\n                setError(\"Username or password incorrect\"); \n            }\n        );\n      }\n      const submitHandler = () => {\n        resetPass(details);\n      };\n    return (\n        <>\n            <div className=\"confirm-pass mt-5 container pure-form \">\n                <fieldset className=\"confirm-pass\">\n                        <h1>Set a New Password</h1>\n                        {success !== \"\" ? <div className=\"error success\">{success}</div> : \"\"}\n                        {error !== \"\" ? <div className=\"error\">{error}</div> : \"\"}\n                        \n                        <input type=\"text\" \n                                placeholder=\"Enter username\" \n                                id=\"password\"\n                                onChange={(e) => setDetails({ ...details, name: e.target.value })}\n                                value={details.name}\n                                required/>\n                        <input type=\"password\" \n                                placeholder=\"Enter current Password\" \n                                id=\"password\" \n                                onChange={(e) => setDetails({ ...details, oldpassword: e.target.value })}\n                                value={details.oldpassword}\n                                required/>\n                        <input type=\"password\" \n                                placeholder=\"Enter New Password\" \n                                id=\"new_password\" \n                                onChange={(e) => setDetails({ ...details, newpassword: e.target.value })}\n                                value={details.newpassword}\n                                required\n                        />\n                        <button type=\"submit\"  onClick={() => submitHandler()}  className=\"pure-button pure-button-primary\">Confirm</button>\n\n                </fieldset>\n            </div>\n        </>\n    )\n    \n}\nexport default PasswordReset;","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../css/profile-style.css\";\n\nfunction Profile() {\n  const [details, setDetails] = useState({ name: \"\" });\n  const [bio, setBio] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function getBio(details) {\n    Axios.get(\"/getBio\", {\n      username: \"jayvin\", //HARDCODED TO JAYVIN USER SINCE NO OTHER USER IN DB\n    }).then(\n      (response) => {\n        console.log(response.data.message);\n        setBio(response.data.message);\n        setError(\"\");\n      },\n      (error) => {\n        console.log(error);\n        setBio(\"\");\n        setError(\"Couldn't get Bio\");\n      }\n    );\n  }\n  getBio(details);\n\n  return (\n    <body id=\"profilebody\">\n      <main className=\"profile\">\n        <div className=\"profile-content profile\">\n          <section className=\"p-head\">\n            <div id=\"user-pfp\">\n              <img\n                alt=\"profile\"\n                src=\"https://www.thispersondoesnotexist.com/image\"\n              />\n            </div>\n            <div id=\"user-infosec\">\n              <h1 id=\"name-title\">Username</h1>\n              <p>LEADERBOARD RANKING</p>\n              <p>#000000000000000000</p>\n              <p>LEVEL</p>\n              <p>XP</p>\n              <p className=\"bio\">\n                {bio !== \"\" ? (\n                  <p className=\"\">{bio}</p>\n                ) : (\n                  <p className=\"error\">{error}</p>\n                )}\n              </p>\n            </div>\n            <div id=\"circle-stats\" title=\"XP\">\n              <svg>\n                <circle\n                  className=\"circle-xp\"\n                  cx=\"125\"\n                  cy=\"125\"\n                  r=\"100\"\n                ></circle>\n              </svg>\n\n              <div className=\"div-lvl\">\n                <div>\n                  <h3>Level 0</h3>\n                </div>\n              </div>\n            </div>\n          </section>\n          <div className=\"profile-div-left\">\n            <section className=\"pf-sec sec-friends\">\n              <h4>FRIENDS</h4>\n              <div className=\"frn\">\n                <div className=\"frn-img\"></div>\n                <h5>FriendUsername</h5>\n              </div>\n              <div className=\"frn\">\n                <div className=\"frn-img\"></div>\n                <h5>FriendUsername</h5>\n              </div>\n              <div className=\"frn\">\n                <div className=\"frn-img\"></div>\n                <h5>FriendUsername</h5>\n              </div>\n              <div className=\"frn\">\n                <div className=\"frn-img\"></div>\n                <h5>FriendUsername</h5>\n              </div>\n            </section>\n          </div>\n          <div className=\"profile-div-right\">\n            <section className=\"pf-sec sec-badges\">\n              <h4>BADGES</h4>\n              <div className=\"ubadge\" title=\"Say Hello to Coding!\"></div>\n              <div className=\"ubadge\" title=\"Badge Name\"></div>\n              <div className=\"ubadge\" title=\"Badge Name\"></div>\n              <div className=\"ubadge\" title=\"Badge Name\"></div>\n              <div className=\"ubadge\" title=\"Badge Name\"></div>\n              <div className=\"ubadge\" title=\"Badge Name\"></div>\n            </section>\n\n            <section className=\"pf-sec sec-most-played\">\n              <h4>MOST PLAYED GAMES</h4>\n              <div className=\"game\">\n                <h5>Hello World!</h5>\n              </div>\n              <div className=\"game\">\n                <h5>Game Title 2</h5>\n              </div>\n              <div className=\"game\">\n                <h5>Game Title 3</h5>\n              </div>\n              <div className=\"game\">\n                <h5>Game Title 4</h5>\n              </div>\n              <div className=\"game\">\n                <h5>Game Title 5</h5>\n              </div>\n              <div className=\"game\">\n                <h5>Game Title 6</h5>\n              </div>\n            </section>\n          </div>\n        </div>\n      </main>\n    </body>\n  );\n}\nexport default Profile;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  const isLogin = localStorage.getItem(\"isLogin\");\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      component={(props) =>\n        isLogin && restricted ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = localStorage.getItem(\"isLogin\");\n  return (\n    //Show the component only when the user is logged in\n    //otherwise redirect the user to the /login page\n    <Route\n      {...rest}\n      component={(props) =>\n        isLogin ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","const IfGameJS = ()  => {\n\t//Add onclick listeners\n\tdocument.querySelector(\"#robot-submit\").addEventListener('click', ()=>{robotGo();});\n\tdocument.querySelector(\"#robot-try-again\").addEventListener('click', ()=>{robotRestart();});\n\tdocument.querySelector(\"#show-hide-code\").addEventListener('click', ()=>{changeCodeVisibility();});\n\t\n\t//These will become PHP session variables \n\tvar MAX_MOVES = 20;\n\tvar id = null;\n\tvar level = 0;\n\tvar level_start_positions = [0];\n\tvar level_goal_positions = [8];\n\tvar attempts = 0;\n\n\t//show/hide the code section\n\tfunction changeCodeVisibility() {\n\t\tvar code = document.querySelector(\"#code\");\n\t\tif (getComputedStyle(code).visibility === \"hidden\") {\n\t\t\tcode.style.visibility = \"visible\";\n\t\t}\n\t\telse {\n\t\t\tcode.style.visibility = \"hidden\";\n\t\t}\n\t}\n\n\t//Send the robot back it's starting position in the array\n\tfunction robotRestart() {\n\n\t\t//Clear the robot from its current position and reset state\n\t\tvar robot = document.querySelector(\"#robot\");\n\t\trobot.parentNode.innerHTML = '';\n\t\tattempts = 0;\n\n\t\t//Place the robot back at the start position\n\t\tvar game_grid = document.querySelector(\"#game-grid\");\n\t\tvar position_array = game_grid.childNodes;\n\t\tvar robot_start_pos = level_start_positions[level];\n\t\tvar goal_pos = level_goal_positions[level];\n\t\tposition_array[goal_pos].innerHTML = \"<img id='goal' src='../images/treasure.png' />\";\n\t\tposition_array[robot_start_pos].innerHTML = \"<img id='robot' src='../images/robot.png'i />\";\n\n\t\t//clear game status message \n\t\tresetAttempts();\n\n\t\t//hide the play again button and enable the go button\n\t\tdocument.querySelector(\"#robot-try-again\").style.visibility = \"hidden\";\n\t\tdocument.querySelector(\"#robot-submit\").disabled = false;\n\t}\n\t\t\n\t//Parse the user's action print out the corresponding code snippets\n\tfunction printCode(on_front_wall, on_bottom_wall, robot_default) {\n\t\tvar front_wall_code = ''; //action to perform on front wall\n\t\tvar bottom_wall_code = ''; //action to perform on bottom wall\n\t\tvar default_code = ''; //default action to perform\n\n\t\tvar code_output = document.querySelector(\"#code-output\");\n\t\tvar code_elements = document.querySelector(\"#code-elements\");\n\t\tvar code = ''; //the user's actions translated to python code\n\n\t\tswitch (on_front_wall) {\n\t\t\tcase \"Down\":\n\t\t\t\tfront_wall_code = \"vpos = vpos - 1\"; //move downwards\n\t\t\t\tbreak;\n\t\t\tcase \"Up\":\n\t\t\t\tfront_wall_code = \"vpos = vpos + 1\"; //move upwards\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\tswitch (on_bottom_wall) {\n\t\t\tcase \"Left\":\n\t\t\t\tbottom_wall_code = \"hpos = hpos - 1\"; //move left\n\t\t\t\tbreak;\n\t\t\tcase \"Right\":\n\t\t\t\tbottom_wall_code = \"hpos = hpos + 1\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\tswitch (robot_default) {\n\t\t\tcase \"Right\":\n\t\t\t\tdefault_code = \"hpos = hpos + 1\"; //move right\n\t\t\t\tbreak;\n\t\t\tcase \"Down\":\n\t\t\t\tdefault_code = \"vpos = vpos - 1\"; //move down\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\t\n\t\tcode = \n`<pre class='ifgame_pre'><code> \n\tif is_front_wall == True:\n\t${front_wall_code}\n\telif is_bottom_wall == True:\n\t${bottom_wall_code}    \n\telse: \n\t${default_code}\n</code></pre>`;\n\t\tcode_output.innerHTML = code;\n\t\tcode_elements.style.visibility = \"inherit\";\n\n\t}\n\n\tfunction increment() {\n\t\tattempts++;\n\t\tdocument.querySelector(\"#game-attempts\").innerHTML = attempts;\n\t}\n\n\tfunction resetAttempts() {\n\t\tattempts = 0;\n\t\tdocument.querySelector(\"#game-attempts\").innerHTML = attempts;\n\t}\n\n\t//Move the robot according the actions specified by the user\n\tfunction robotGo() {\n\t\tvar on_front_wall = document.querySelector(\"#on-front-wall\").value;\n\t\tvar on_bottom_wall = document.querySelector(\"#on-bottom-wall\").value;\n\t\tvar robot_default = document.querySelector(\"#default\").value;\n\n\t\tvar game_status = document.querySelector(\"#game-status\");\n\t\tvar go_button = document.querySelector(\"#robot-submit\");\n\n\t\t//disable the go button and generate code output\n\t\tgo_button.disabled = true;\n\t\tprintCode(on_front_wall, on_bottom_wall, robot_default);\n\n\t\tgame_status.innerHTML = ''; //clear any error messages\t\n\n\t\tvar game_grid = document.querySelector(\"#game-grid\");\n\t\tvar position_array = game_grid.childNodes;\n\t\tvar num_positions = game_grid.childElementCount;\n\t\tvar num_rows = Math.sqrt(num_positions);\n\t\tvar num_columns = num_rows;\n\n\t\t\n\t\tvar hpos = 0; //horizontal offset\n\t\tvar vpos = 0; //vertical offset\n\t\tvar goal_pos = level_goal_positions[level];\n\t\tvar moves = 0;\n\t\tvar robot_array_pos = level_start_positions[level]; //position of robot in position array\n\t\tvar robot_start_pos = robot_array_pos; \n\t\tvar error = 0;\n\t\tclearInterval(id); //stop any previous animation\n\t\tid = setInterval(moveRobot, 1000); //call the function moveRobot every second\n\t\t// Increment attempts counter\n\t\tincrement();\n\n\t\t// Move the robot, based on instructions.\n\t\tfunction moveRobot() {\n\t\t\tmoves++;\n\t\t\terror = false;\n\t\t\t\n\t\t\tif (moves >= MAX_MOVES) { //ran out of moves\n\t\t\t\tgame_status.innerHTML(\"The robot took too many moves and ran out of steam. Try again.\");\n\t\t\t\tposition_array[robot_array_pos].innerHTML = '';\n\t\t\t\tposition_array[robot_start_pos].innerHTML = \"<img id='robot' src='../images/robot.png'>\";\n\t\t\t\tclearInterval(id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\n\t\t\t\tif (vpos + 1 >= num_rows) { //Wall below\n\t\t\t\t\tswitch(on_bottom_wall) {\n\t\t\t\t\t\tcase \"Left\":\n\t\t\t\t\t\tif (hpos === 0) { //going off grid\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thpos--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Right\":\n\t\t\t\t\t\t\tif (hpos >= num_columns) {\n\t\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thpos++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (hpos + 1 >= num_columns) { //wall in front\n\t\t\t\t\tswitch(on_front_wall) {\n\t\t\t\t\t\tcase \"Down\":\n\t\t\t\t\t\t\tif (vpos + 1 >= num_rows) {\n\t\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvpos++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Up\":\n\t\t\t\t\t\t\tif (vpos === 0) {\n\t\t\t\t\t\t\t\terror = true; \t\t\t\t\t\t                                                                break;\t  \t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvpos--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse { //no wall\n\t\t\t\t\tswitch (robot_default) {\n\t\t\t\t\t\tcase \"Down\":\n\t\t\t\t\t\t\tvpos++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Right\":\n\t\t\t\t\t\t\thpos++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\terror = true;\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\tif (error) {\n\t\t\t\t\tgame_status.innerHTML = \"Oops that path wasn't quite right. Try again.\";\n\t\t\t\t\tposition_array[robot_array_pos].innerHTML = '';\n\t\t\t\t\tposition_array[robot_start_pos].innerHTML = \"<img id='robot' src='../images/robot.png' />\";\n\n\t\t\t\t\tgo_button.disabled = false;\n\t\t\t\t\tclearInterval(id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tposition_array[robot_array_pos].innerHTML = '';\n\t\t\t\trobot_array_pos = vpos * num_rows + hpos;\n\t\t\t\tposition_array[robot_array_pos].innerHTML = \"<img id='robot' src='../images/robot.png' />\";\n\t\t\t\tif ((hpos*num_columns + vpos) === goal_pos) {\n\t\t\t\t\tclearInterval(id); //stop animation\n\t\t\t\t\tgame_status.innerHTML = \"Yay, Rob successfully retrieved the treasure!\";\n\t\t\t\t\tdocument.querySelector(\"#robot-try-again\").style.visibility = \"visible\";\n\t\t\t\t\tdocument.querySelector(\"#next-level\").style.visibility = \"visible\";\n\t\t\t\t\treturn;\n\t\t\t\t}\t\n\t\t\t}\n\t\treturn;\n\t\t}\n\t}\t\n}\n\nexport default IfGameJS;\n\n","import React, { Fragment, useEffect } from \"react\";\nimport \"../css/ifgame-style.css\";\nimport \"../css/nav.css\";\nimport IfGameJS from \"./ifgamejs.js\";\n\nconst IfGame = () => {\n  useEffect(() => {\n    IfGameJS();\n  }, []);\n\n  return (\n    <Fragment>\n      <title>Learn If Statements</title>\n      <body id=\"ifgame_body\">\n        <div id=\"content\">\n          <h1 className=\"ifgame_h1\"> Learn If Statements </h1>\n          <div id=\"game-window\">\n            <div id=\"option-select\">\n              <h2 className=\"ifgame_h2\">Level 1</h2>\n              <p>\n                Rob the Robot has been tasked with retrieving the treasure on\n                the board.\n              </p>\n              <p>\n                Help Rob reach the treasure by telling him what to do when he\n                encounters an obstacle.\n              </p>\n              <div className=\"option\">\n                <label htmlFor=\"on-front-wall\">\n                  If there is a wall in front, go\n                </label>\n                <select className=\"ifgame_select\" id=\"on-front-wall\">\n                  <option>Up</option>\n                  <option>Down</option>\n                </select>\n              </div>\n              <div className=\"option\">\n                <label htmlFor=\"on-bottom-wall\">\n                  If there is a wall below, go\n                </label>\n                <select className=\"ifgame_select\" id=\"on-bottom-wall\">\n                  <option>Left</option>\n                  <option>Right</option>\n                </select>\n              </div>\n              <div className=\"option\">\n                <label htmlFor=\"default\"> Otherwise, go</label>\n                <select className=\"ifgame_select\" id=\"default\">\n                  <option>Down</option>\n                  <option>Right</option>\n                </select>\n              </div>\n              <div id=\"game-status\"></div>\n              <div id=\"game-attempts\">0</div>\n\n              <button className=\"ifgame_button\" id=\"robot-submit\">\n                Go\n              </button>\n              <button className=\"ifgame_button\" id=\"robot-try-again\">\n                Play Again\n              </button>\n              <button className=\"ifgame_button\" id=\"show-hide-code\">\n                Show/Hide Code\n              </button>\n              <button className=\"ifgame_button\" id=\"next-level\">\n                Next Level\n              </button>\n            </div>\n            <div id=\"game-grid\">\n              <div className=\"grid-position\">\n                <img id=\"robot\" alt=\"robot\" src=\"images/robot.png\" />\n              </div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\"></div>\n              <div className=\"grid-position\">\n                <img id=\"goal\" alt=\"goal\" src=\"images/treasure.png\" />\n              </div>\n            </div>\n            <div id=\"code\">\n              <h2 className=\"ifgame_h2\">Code For Actions</h2>\n              <div id=\"code-output\"></div>\n\n              <div id=\"code-elements\">\n                <div>\n                  The variable <p className=\"highlighted\">is_front_wall</p> is a{\" \"}\n                  <p className=\"highlighted\">boolean</p> that is{\" \"}\n                  <p className=\"highlighted\">TRUE</p> if there is a wall in\n                  front of Rob and <p className=\"highlighted\">FALSE</p>{\" \"}\n                  otherwise.\n                </div>\n                <div>\n                  The variable <p className=\"highlighted\">is_bottom_wall</p> is\n                  a <p className=\"highlighted\">boolean</p> that is{\" \"}\n                  <p className=\"highlighted\">TRUE</p> if there is a wall below\n                  Rob and <p className=\"highlighted\">FALSE</p> otherwise.\n                </div>\n                <div>\n                  The variable <p className=\"highlighted\">hpos</p> is an{\" \"}\n                  <p className=\"highlighted\">integer</p> representing Rob's\n                  horizontal position on the board.\n                </div>\n                <div>\n                  The variable <p className=\"highlighted\">vpos</p> is an{\" \"}\n                  <p className=\"highlighted\">integer</p> representing Rob's\n                  vertical position on the board.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </body>\n    </Fragment>\n  );\n};\n\nexport default IfGame;\n","/*\tchange font size of ALL <p> and <pre> elements on the page.\n\tbuttons for font size control must be in:\n\t\n\t<div id=\"fontsizer\">\n\t\t<ul>\n\t\t\t<li>A</li>\n\t\t\t<li>A</li>\n\t\t\t<li>A</li>\n\n\t\t</ul>\n\t</div>\n*/\nconst ChangeFontSize = () => {\n\tvar sizebtns = document.querySelectorAll(\"#fontsizer li\");\n\n\tsizebtns[0].addEventListener('click', ()=>{changefontSize('medium')});\n\tsizebtns[1].addEventListener('click', ()=>{changefontSize('large')});\n\tsizebtns[2].addEventListener('click', ()=>{changefontSize('x-large')});\n\n\tfunction changefontSize(fsize) {\n\t\tlet pars = document.querySelectorAll('p');\n\t\tlet codesnips = document.querySelectorAll('pre');\n\n\t\tfor (let i = 0; i < pars.length; i++) {\n\t\t\tpars[i].style.fontSize = fsize;\n\t\t}\n\t\tfor (let i = 0; i < codesnips.length; i++) {\n\t\t\tcodesnips[i].style.fontSize = fsize;\n\t\t}\n\t}\n}\n\nexport default ChangeFontSize;\n\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/ifcode-style.css\";\nimport \"../css/nav.css\";\nimport ChangeFontSize from \"./changefontsize.js\";\n\nconst IfCodeSnippets = () => {\n  useEffect(() => {\n    ChangeFontSize();\n  }, []);\n\n  return (\n    <Fragment>\n      <title>Learn If Statements</title>\n      <body id=\"ifcode_body\">\n        <div id=\"content\">\n          <h1 className=\"ifcode_h1\">If Statements</h1>\n          <div className=\"notes\">\n            <div id=\"fontsizer\">\n              <ul>\n                <li>A</li>\n                <li>A</li>\n                <li>A</li>\n              </ul>\n            </div>\n          </div>\n          <p>An if statement tests a condition.</p>\n          <pre className=\"ifcode_pre\">\n            <code>{`if(is_front_wall): # If there is a wall in front`}</code>\n          </pre>\n          <p>\n            If the condition is TRUE, then the code within the if statement is\n            run.\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # if there is a wall in front \n\t# Go down\n\tvertical_position = vertical_position - 1 `}\n            </code>\n          </pre>\n          <p>\n            If the condition is FALSE, then the code within the if statement is\n            not run (it is skipped).\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # if there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1 `}\n            </code>\n          </pre>\n          <p>\n            If the condition is FALSE and an ELSE statement is present, the code\n            within the ELSE statement is run instead.\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # If there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1\nelse: # If there is no wall in front \n    \t# Go right\n\thorizontal_position = horizontal_position + 1`}\n            </code>\n          </pre>\n          <p>\n            Multiple conditions can be chained together using the ELIF\n            statement.\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # If there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1\nelif(is_bottom_wall): # If there is a wall below\n    \t# Go up\n\tvertical_position = vertical_position + 1 `}\n            </code>\n          </pre>\n          <p>\n            In a chain of conditions with ELIF statements, Python tests each\n            condition in order and runs the code within the first statement\n            whose condition is TRUE. All following ELIF statements are not run.\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # If there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1\nelif(is_bottom_wall): # If there is a wall below\n    \t# Go up\n\tvertical_position = vertical_position + 1`}\n            </code>\n          </pre>\n          <p>\n            An ELSE statement can be added to a chain of conditions. The code\n            within an ELSE statement is run if all IF and ELIF conditions are\n            FALSE.\n          </p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # If there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1\nelif(is_bottom_wall): # If there is a wall below\n    \t# Go up\n\tvertical_position = vertical_position + 1\nelse: # If none of the above are true\n    \t# Go right\n\thorizontal_position = horizontal_position + 1`}\n            </code>\n          </pre>\n          <p>An example combining IF, ELIF, and ELSE statements</p>\n          <pre className=\"ifcode_pre\">\n            <code>\n              {`if(is_front_wall): # If there is a wall in front\n\t# Go down\n\tvertical_position = vertical_position - 1\nelif(is_bottom_wall): # If there is a wall below\n        # Go up\n\tvertical_position = vertical_position + 1\nelse: # If none of the above are true\n   \t# Go right\n\thorizontal_position = horizontal_position + 1`}\n            </code>\n          </pre>\n          <Link to=\"/ifgame\">\n            <input\n              type=\"submit\"\n              id=\"toGameButton\"\n              name=\"game\"\n              value=\"If Statement Game\"\n            />\n          </Link>\n        </div>\n      </body>\n    </Fragment>\n  );\n};\n\nexport default IfCodeSnippets;\n","//import \"../css/shell.css\";\nimport \"../css/codemirror.css\";\nimport \"../css/cobalt.css\";\nimport React, {useState, Component} from \"react\";\n// require (\"../js/codemirror-5.59.2/lib/codemirror.js\");\n// require (\"../js/codemirror-5.59.2/mode/javascript/javascript.js\");\nimport {Controlled as CodeMirror} from \"react-codemirror2\"\n// import {EditorState, EditorView, basicSetup} from \"@codemirror/basic-setup\"\n// import {python} from \"@codemirror/lang-python\"\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Axios from \"axios\";\n\nclass Shell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      question: \"\",\n      check: \"\",\n      output: \"\",\n      value: \"\",\n      attempt: 0,\n      fail: false,\n      success: false,\n      script:\n`def main():#DON'T CHANGE THE FUNCTION NAME\n    print (\"Hello World\")\n  \nif __name__ == \"__main__\":#DON'T CHANGE BELOW \n    main()` ,\n    };\n\n    //get reference for input\n    this.nameRef = React.createRef();\n\n    //Setup cursor position for input\n    this.cursor =0;\n}\n\n//updates cursor location on textarea\ncomponentDidUpdate() {\n    this._setCursorPositions();\n}\n\n_setCursorPositions = () => {\n    //reset the cursor position for input\n    this.nameRef.current.selectionStart = this.cursor;\n    this.nameRef.current.selectionEnd = this.cursor;\n};\n\n//updates value on whatever state is sent in\nhandleInputChange = (key, val) => {\n    this.setState({\n        [key]: val\n    });\n};\n\n//runs before page loads to get the question prompt,starter code and tests\ncomponentWillMount() {\n    Axios.get(\"/getQuestion\", {\n    }).then((response) => {\n        this.handleInputChange(\"question\", response.data.question);\n        this.handleInputChange(\"check\", response.data.check);\n        //this.handleInputChange(\"attempt\", response.data.attempt); NEED TO ADD ATTEMPT TRACKER TO DB\n        let script = response.data.starter;\n        this.handleInputChange(\"script\", script);\n        this.setState({script});\n        console.log(this.state.script);\n        console.log(script);\n    });\n} \n//hides and closes the modal\nhandleFailClose = () => this.handleInputChange(\"fail\",false);\nhandleFailShow = () => this.handleInputChange(\"fail\",true);\nhandleSuccessClose = () => this.handleInputChange(\"success\",false);\nhandleSuccessShow = () => this.handleInputChange(\"success\",true);\n\n//displays response in output box\nDisplayOutput = (response) => {\n    if (response.data) {\n        console.log(response.data);\n        this.handleInputChange(\"output\", response.data.output);\n      } else {\n        console.log(response.data);\n        this.handleInputChange(\"output\", response.data.output);\n      }\n    }  \n\n    //For when user wants to submit his question to be tested. ONLY GET 1 ATTEMPT\n    Submit = (e) => {\n        if (this.state.attempt == 0){\n            e.preventDefault();\n            Axios.post(\"/compile\", {\n            script: this.state.script + this.state.check,\n        }).then((response) => {\n            this.DisplayOutput(response);\n            this.state.attempt += 1;\n            console.log(response);\n            console.log(response.data.output == \"Everything passed\\n\");\n            if (response.data.output == \"Everything passed\\n\"){\n                this.handleSuccessShow();\n            }\n        });}\n        else{\n            e.preventDefault();\n            this.handleInputChange(\"output\", \"Sorry you only get one attempt per day.\\nVisit our code repository for more practice questions\");\n            this.handleFailShow();\n        }\n  };\n    //when user just wants to test their code\n    Test = (e) => {\n        e.preventDefault();\n        Axios.post(\"/compile\", {\n        script: this.state.script + \"\\n\",\n    }).then((response) => {\n        this.DisplayOutput(response);\n    });\n    };\n\n    render() {\n        return (\n        <Container className=\" mt-5\">\n            <Modal show={this.state.fail} onHide={this.handleFailClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Attempt Limit reached</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Sorry! You only get one attempt per day but you can visit our code repository for more practice questions.</Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={this.handleFailClose}>\n                    Close\n                </Button>\n                </Modal.Footer>\n            </Modal>\n            <Modal show={this.state.success} onHide={this.handleSuccessClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Congrats</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Congratulations! You got the challenge done. If you want more questions visit our code repository.</Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"success\" onClick={this.handleSuccessClose}>\n                    Close\n                </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col className=\"mb-5\">\n                    <p className=\"display-3\">Daily Challenge</p>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <p className=\"display-5\">{this.state.question}</p>\n                </Col>\n            </Row>\n            <Row>\n                <Col noGutters md={8} sm={{ span: 12}}>\n                    <form >\n                        <CodeMirror className=\" mt-5\"\n                            ref={this.nameRef}\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            id=\"name\"\n                            value={this.state.script}\n                            options={{\n                                mode: 'python',\n                                theme: 'cobalt',\n                                lineNumbers: true,\n                                indentWithTabs: true,\n                                smartIndent: true,\n                            }}\n                            onBeforeChange={(editor, data, script) => {\n                                this.handleInputChange(\"script\", script);\n                                this.value = this.state.script;\n                            }}\n\n                            onChange={(editor, data, value) => {\n                                this.cursor = editor.cursorCoords;\n                                this.handleInputChange(\"script\", editor.getValue());\n                                this.setState({value});\n                                this.value = this.state.script;\n                                }}/>\n                        <Row>\n                            <Col md={3}>\n                                <Button onClick={this.Test} className=\"mt-3\" type=\"submit\">Test</Button>\n                            </Col>\n                            <Col md={{ span: 2, offset: 7 }}>\n                                <Button onClick={this.Submit} className='mt-3 mb-3' variant= \"danger\" type=\"submit\">Submit</Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col className=\"mt-5 mb-5\" md={4} sm={{ span: 12}}>\n                    <pre>{this.state.output}</pre>\n                </Col>\n            </Row>\n            </Container>)\n    }\n}\nexport default Shell;","import React, { Fragment, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../css/dictcode-style.css\";\nimport \"../css/nav.css\";\nimport ChangeFontSize from \"./changefontsize.js\";\n\nconst DictionaryCodeSnippets = () => {\n    useEffect(() => {\n        ChangeFontSize();\n      }, []);\n\n    \n      return(<Fragment>\n        <title>Learn If Statements</title>\n        <body id=\"dictcode_body\">\n            <div id=\"content\">\n            <h1 className=\"dictcode_h1\">Python Dictionaries</h1>\n            <div className=\"notes\">\n                <div id=\"fontsizer\">\n                <ul>\n                    <li>A</li>\n                    <li>A</li>\n                    <li>A</li>\n                </ul>\n                </div>\n            </div>\n            <p>A Python dictionary is a data structure which stores data in <strong> key-value pairs </strong>. Each key and value is separated by a colon.</p>\n\t    <p>In the example below, 'akey' is a key which maps to a value 'avalue'.</p>\n            <pre className=\"dictcode_pre\">\n                <code>{`my_dict = {'akey' : 'avalue'}`}</code>\n            </pre>\n            <p>\n                A Python dictionary can be created using curly brackets <strong>({\"{}\"})</strong>. You may also prefill the dictionary with key-value pairs. \n            </p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_empty_dict = {} # empty dictionary \nnon_empty_dict = {'akey' : 'avalue'} # dictionary with prefilled key-value pairs`}\n                </code>\n            </pre>\n            <p>\n                Multiple key-value pairs are separated by commas.\n            </p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`multi_element_dict = {'key1' : 'value1', 'key2' : 'value2'}`}\n                </code>\n            </pre>\n            <p>\n                A key-value pair can have different types and a Python dictionary may store keys and values of different types as well.\n            </p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_dict = {'astringkey' : 1, 2 : 'astringvalue'}`}\n                </code>\n            </pre>\n            <p>Each key in a Python dictionary is unique. This means that each key has exactly one value.</p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`good_dict = {'key1' : 'value1'} # Good dictionary\n\n# Bad dictionary, 'key1' : 'value2' overwrites the assignment 'key1' : 'value1'\nbad_dict = {'key1' : 'value1', 'key1' : 'value2'}\n\nprint(bad_dict) # {'key1' : 'value2'}`}\n                </code>\n            </pre>\n            <p>You can insert and modify key-value pairs using the assignment operator. If the key exists, the corresponding value is updated.</p>\n\t    <p>Otherwise, a new key-value pair is created.</p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_dict = {}\nmy_dict['key1'] = 'value1' \n\nprint(my_dict) # {'key1' : 'value1'}\n\nmy_dict['key1'] = 'value2' # Changes the key-value pair 'key1' : 'value1' to 'key1' : 'value2'\n    \nprint(my_dict) # {'key1' : 'value2'}`}\n                </code>\n            </pre>\n            <p>You can get the value of a key by using square brackets <strong>([])</strong> or with the <strong>get()</strong> method.</p>\n            <p>If a key-value pair does not exist, using square brackets will throw an error whereas the get() method will return None.</p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_dict = {'key1' : 'value1'}\nmy_dict['key1'] # returns 'value1'\nmy_dict['key2'] # Error\n    \nmy_dict.get('key1') # returns 'value1'\nmy_dict.get('key2') # returns None`}\n                </code>\n            </pre>\n            <p>\n                You can remove a key-value pair from the dictionary using the <strong>pop()</strong> method, <strong>popitem()</strong> method or using the keyword <strong>del</strong>.</p>\n                <p>The <strong>pop()</strong> method removes a key-value pair given the key. The removed value is returned.</p>\n                <p>The <strong>del</strong> keyword removes a key-value pair given the value. Returns nothing.</p>\n                <p>The <strong>popitem()</strong> method removes the last key-value pair inserted into the dictionary. The removed key-value pair is returned as a tuple.</p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_dict =  {'name' : 'John', 'age': 16, 'followers' : 40000}\n\nmy_dict.pop('age') # returns 16\n\nprint(my_dict) # {'name' : 'John', 'followers' : 40000}\n\nmy_dict.popitem() # returns ('followers', 40000)\n\nprint(my_dict) # {'name' : 'John'}\n\ndel my_dict['name'] # returns nothing\n\nprint(my_dict) # {}\n    \nmy_dict.pop('age') # Error\nmy_dict.popitem() # Error\ndel my_dict['name'] # Error`}\n                </code>\n            </pre>\n            <p>\n            The <strong>clear()</strong> method is used to delete all key-value pairs within a dictionary. The <strong>del</strong> keyword can be used to delete the entire dictionary itself.\n            </p>\n            <pre className=\"dictcode_pre\">\n                <code>\n                {`my_dict = {'name' : 'Alex', 'age' : 18, 1 : 'hello'}\n\nmy_dict.clear() # Returns nothing\n\nprint(my_dict) # {}\n\ndel my_dict\n\nprint(my_dict) # Error`}\n                </code>\n            </pre>\n            <Link to=\"/dictgame\">\n                <input\n                type=\"submit\"\n                id=\"toGameButton\"\n                name=\"game\"\n                value=\"Dictionary Game\"\n                />\n            </Link>\n            </div>\n        </body>\n      </Fragment>)\n\n}\n\nexport default DictionaryCodeSnippets;\n","var nodeTypes = ['square', 'triangle', 'circle'];\nvar MAX_CODE_LINES = 12;\n\nconst GameSetup = () => {\n\t//Add event listeners\n\tdocument.querySelector(\"#dictGameButtonModify\").addEventListener('click', modifyKeyValue);\n\tdocument.querySelector(\"#dictGameButtonRemove\").addEventListener('click', removeKey);\n\tdocument.querySelector(\"#dictPlayAgain\").addEventListener('click', GameRestart);\n\tdocument.querySelector(\"#dictShowHideCode\").addEventListener('click', ChangeCodeVisibility);\n\n\t//Prepopulate select dropdowns\n\tvar addKeySelect = document.querySelector(\"#dictGameSelectAddKey\");\n\tvar addValueSelect = document.querySelector(\"#dictGameSelectAddValue\");\n\tvar removeKeySelect = document.querySelector(\"#dictGameSelectRemoveKey\");\n\n\tvar selectLists = [addKeySelect, addValueSelect, removeKeySelect];\n\tvar i, j = 0;\n\tvar option, selectList = \"\";\n\n\tfor (i = 0; i < selectLists.length; i++) {\n\n\t\t//select list to append to\n\t\tselectList = selectLists[i];\n\t\tfor (j = 0; j < nodeTypes.length; j++) {\n\t\t\toption = document.createElement('option');\n\t\t\toption.value = nodeTypes[j];\n\t\t\toption.innerHTML = nodeTypes[j].charAt(0).toUpperCase() + nodeTypes[j].slice(1);\n\t\t\tselectList.appendChild(option);\n\t\t}\n\t}\n}\n\n//Restart the dictionary game\nconst GameRestart = () => {\n\t//reload window\n\twindow.location.reload();\n}\n\n//Generate a dictionary\nconst GenerateDict = (dictCtr, numNodes) => {    \n   \n    var i, j, rand, node = 0;\n    var block, blockId, currentCtr = \"\";\n    var nodeType = 'square';\n    var columns = ['key', 'value'];\n\n    if (numNodes > nodeTypes.length) {\n\t    console.log(\"Dictionary length is greater than number of keys.\");\n\t    return;\n    }\n\n    for (i = 0; i < columns.length; i++) {\n\n\t//Set container to fill and block type (key or value)\n\tcurrentCtr = dictCtr.childNodes[i]; \n\tblockId = columns[i];\n\t\n    \t//Add blocks and nodes\n    \tfor (j = 0; j < numNodes; j++) {\n\n\t\t//Get node type (if value node, then type is random)\n\t\trand = Math.floor(Math.random()*(nodeTypes.length));\n\t\tnodeType = (blockId === 'key') ? nodeTypes[j] : nodeTypes[rand];\n\n        \t//Create block (container for node)\n        \tblock = document.createElement('div');\n        \tblock.className += ' '+ blockId + 'Block';\n\n        \t//Create node and add it to block\n        \tnode = createNode(nodeType);\n        \tblock.appendChild(node);\n        \n       \t \t//Append block to container\n        \tcurrentCtr.appendChild(block);\n    \t}\n   }\n}\n\n//Create a grid node\nconst createNode = type => {\n\n    var imgNode = document.createElement('img');\n    imgNode.className += (' ' +  type);\n    imgNode.src = 'images/dict' + (type.charAt(0).toUpperCase() + type.slice(1)) + '.png';\n    imgNode.alt =  type;\n\n    return imgNode;\n}\n\n//Add/update key-value in the user dictionary\nconst modifyKeyValue = () => {\n\tclearGameStatus();\n\n\t//Get user selected values\n\tvar keySelect = document.querySelector(\"#dictGameSelectAddKey\");\n\tvar valSelect = document.querySelector(\"#dictGameSelectAddValue\");\n\n\tvar keyClass = keySelect.options[keySelect.selectedIndex].value.toLowerCase(); //key to add\n\tvar valClass = valSelect.options[valSelect.selectedIndex].value.toLowerCase(); //value to add\n\t\n\t//Dictionary Columns\n\tvar keyColumn = document.querySelector(\"#dictContainer #dictKeys\");\n\tvar valColumn = document.querySelector(\"#dictContainer #dictValues\");  \n\n\t//Clear error messages\n\tvar modifyStatus = document.querySelector(\"#dictModifyStatus\");\n\tmodifyStatus.innerHTML = '';\n\n\tvar i = 0;\n\tvar keyBlock = -1;\n\tvar keyIndex = -1;\n\tvar valNode = '';\n\tvar keyNode = '';\n\n\t//Find key index in key column\n\tfor (i = 1; i < keyColumn.childElementCount; i++) {\n\t\tkeyBlock = keyColumn.childNodes[i];\n\n\t\tif (keyClass === keyBlock.childNodes[0].className.trim()) {\n\t\t\t//found index of key\n\t\t\tkeyIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//Key-value pair doesn't exist\n\tif (keyIndex === -1) {\n\n\t\t//Create key-value blocks\n        \tvar newKeyBlock = document.createElement('div');\n\t\tvar valBlock = document.createElement('div');\n        \tnewKeyBlock.className += ' keyBlock';\n\t\tvalBlock.className += ' valueBlock';\n\n\n        \t//Create key-value nodes\n        \tkeyNode = createNode(keyClass);\n\t\tvalNode = createNode(valClass);\n        \tnewKeyBlock.appendChild(keyNode);\n\t\tvalBlock.appendChild(valNode);\n\n        \n       \t \t//Append key-value blocks to container\n        \tkeyColumn.appendChild(newKeyBlock);\n\t\tvalColumn.appendChild(valBlock);\n\t\t\n\t\t//Add equivalent code line to output section\n\t\tPrintCodeLine(`myDict[\"` + keyClass + `\"] = \"` + valClass + `\"`);\n\t\n\t\t//Check if game is won\n\t\tif(CheckIfWon()) {\n\t\t\tonWon();\n\t\t}\n\n\t\treturn;\n\t}\n\t\n\t//Overwite value in dictionary\n\tvar val = valColumn.childNodes[keyIndex];\n\n\t//Value not found\n\tif (typeof val === 'undefined') {\n\t\tmodifyStatus.textContent = \"Oops the dictionary is corrupted. Please refresh the page.\";\n\t\treturn;\n\t}\n\t\n\tvalNode = createNode(valClass);\n\tval.textContent = '';\n\tval.appendChild(valNode);\n\n\t//Add equivalent code to code output section\n\tPrintCodeLine(`myDict[\"` + keyClass + `\"] = \"` + valClass + `\"`);\n\n\tif (CheckIfWon()) {\n\t\tonWon();\n\t}\n}\n\n//Remove key-value pair in the user dictionary if it exists\nconst removeKey = () => {\n\tclearGameStatus();\n\n\tvar keySelect = document.querySelector(\"#dictGameSelectRemoveKey\");\n\n\tvar keyClass = keySelect.options[keySelect.selectedIndex].value.toLowerCase(); //key to remove\n\t\n\tvar keyColumn = document.querySelector(\"#dictContainer #dictKeys\");\n\tvar valColumn = document.querySelector(\"#dictContainer #dictValues\"); \n\n\t//Clear any error messages\n\tvar removeStatus = document.querySelector(\"#dictRemoveStatus\");\n\tremoveStatus.innerHTML = '';\n\n\tvar i = 0;\n\tvar keyBlock = -1;\n\tvar keyIndex = -1;\n\n\t//Find key index in key column\n\tfor (i = 1; i < keyColumn.childElementCount; i++) {\n\t\tkeyBlock = keyColumn.childNodes[i];\n\n\t\tif (keyClass === keyBlock.childNodes[0].className.trim()) {\n\t\t\t//found index of key\n\t\t\tkeyIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//Key not found\n\tif (keyIndex === -1) {\n\t\tremoveStatus.textContent = \"The key \\\"\" + (keyClass.charAt(0).toUpperCase() + keyClass.slice(1)) + \"\\\" does not exist.\";\n\t\treturn;\n\t}\n\n\t//Delete key\n\tvar key = keyColumn.childNodes[keyIndex];\n\tkeyColumn.removeChild(key);\n\n\t//Delete value\n\tvar val = valColumn.childNodes[keyIndex];\n\n\t//Value not found\n\tif (typeof val === 'undefined') {\n\t\tremoveStatus.textContent = \"Oops the dictionary is corrupted. Please refresh the page.\";\n\t\treturn;\n\t}\n\n\tvalColumn.removeChild(val);\n\n\tPrintCodeLine(`del myDict[\"`+ keyClass + `\"]`); \n\n\t//Check if game is won\n\tif(CheckIfWon()) {\n\t\tonWon();\n\t}\n}\n\n//Returns true if \"Your Dictionary\" matches \"Target Dictionary\", false otherwise\nconst CheckIfWon = () => {\n\t//Compare user dictionary keys to solution dictionary keys\n\tvar userDictKeys = document.querySelector(\"#dictContainer #dictKeys\");\n\tvar solDictKeys = document.querySelector(\"#solDictContainer #dictKeys\");\n\n\tvar userDictVals = document.querySelector(\"#dictContainer #dictValues\");\n\tvar solDictVals = document.querySelector(\"#solDictContainer #dictValues\"); \n\n\tvar i = 0;\n\n\t//Check if dictionary is valid\n\tif ((userDictKeys.childElementCount !== solDictKeys.childElementCount) || \n\t    (userDictVals.childElementCount !== solDictVals.childElementCount) ||\n\t    (userDictKeys.childElementCount !== userDictVals.childElementCount)||\n\t    (solDictKeys.childElementCount !== solDictVals.childElementCount)) {\n\n\t\treturn false;\n\t}\n\n\t//Compare keys to values\n\tfor (i = 0; i < userDictKeys.childElementCount; i++) {\n\t\tif (userDictKeys.childNodes[i].innerHTML !== solDictKeys.childNodes[i].innerHTML) {\n\t\t\treturn false;\n\t\t}\n\t\tif (userDictVals.childNodes[i].innerHTML !== solDictVals.childNodes[i].innerHTML) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n//Disable dictionary modification buttons and show play again button on win\nconst onWon = () => {\n\t//Set status\n\tvar gameStatus = document.querySelector(\"#gameStatus\");\n\tgameStatus.innerHTML = \"Congratulations! <strong>myDict</strong> matches <strong>targetDict</strong>.\";\n\n\t//Show play again button\n\tvar playAgainButton = document.querySelector(\"#dictPlayAgain\");\n\tplayAgainButton.style.visibility = \"visible\";\n\n\t//Disable modify/remove buttons\n\tvar modifyKeySubmit = document.querySelector(\"#dictGameButtonModify\");\n\tvar removeKeySubmit = document.querySelector(\"#dictGameButtonRemove\");\n\n\tvar addKeySelect = document.querySelector(\"#dictGameSelectAddKey\");\n\tvar addValSelect = document.querySelector(\"#dictGameSelectAddValue\");\n\tvar removeKeySelect = document.querySelector(\"#dictGameSelectRemoveKey\");\n\n\n\tmodifyKeySubmit.disabled = true;\n\tremoveKeySubmit.disabled = true;\n\taddKeySelect.disabled = true;\n\taddValSelect.disabled = true;\n\tremoveKeySelect.disabled = true;\n\n\t//Remove click listeners\n\tmodifyKeySubmit.removeEventListener('click', modifyKeyValue);\n\tremoveKeySubmit.removeEventListener('click', removeKey);\n}\n\n//Clear all game status tags\nconst clearGameStatus = () => {\n\tvar gameStatusTags = document.querySelectorAll(\"[id*='Status']\");\n\tvar i = 0;\n\tfor (i = 0; i < gameStatusTags.length; i++) {\n\t\tgameStatusTags[i].textContent = '';\n\t}\n}\n\n\n//Add code line to output section\nconst PrintCodeLine = codeLine => {\n\tvar codeOutput = document.querySelector(\"#dictCodeOutput\");\n\n\t//Clear code output section if line limit is exceeded\n\tif (codeOutput.childElementCount > MAX_CODE_LINES) {\n\t\tcodeOutput.textContent = '';\n\t}\n\n\tvar preTag = document.createElement('pre');\n\tpreTag.className = 'dictgame_pre';\n\t\n\tvar codeTag = document.createElement('code');\n\tcodeTag.innerHTML = codeLine;\n\n\tpreTag.appendChild(codeTag);\n\tcodeOutput.appendChild(preTag);\n}\n\n\n\n//show/hide the code section\nconst ChangeCodeVisibility = () => {\n\tvar code = document.querySelector(\"#dictCode\");\n\tif (getComputedStyle(code).visibility === \"hidden\") {\n\t\tcode.style.visibility = \"visible\";\n\t}\n\telse {\n\t\tcode.style.visibility = \"hidden\";\n\t}\n}\n\n\nexport {GameSetup, GenerateDict, CheckIfWon, GameRestart};\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../css/dictgame-style.css';\nimport '../css/nav.css';\nimport { GameSetup, GenerateDict, CheckIfWon, GameRestart } from './DictGameLogic.js';\n\nvar MAX_NODES = 4;\nvar MIN_NODES = 1;\n\nconst DictGame = () => {\n\tuseEffect(() => {\n\t\tGameSetup();\n\n\t\tvar numNodes = Math.floor(Math.random()*(MAX_NODES-MIN_NODES)) + MIN_NODES;\n\t\tGenerateDict(document.querySelector(\"#dictContainer\"), numNodes);\n\n\t\tnumNodes = Math.floor(Math.random()*(MAX_NODES-MIN_NODES)) + MIN_NODES;\n\t\tGenerateDict(document.querySelector(\"#solDictContainer\"), numNodes);\n\n\t\tif (CheckIfWon()) {\n\t\t\tGameRestart();\n\t\t}\n\t}, []);\n\n    return(\n        <Fragment>\n\t    <body id=\"dictgame_body\">\n\t    \t<div id=\"dictgame_content\">\n           \t\t<h1 className=\"dictgame_h1\">Dictionary Game</h1>\n\t    \t\t<div id=\"gameWindow\">\n\t\t\t\t<div id=\"gameDescription\">\n\t    \t\t\t\t<h2 className=\"dictgame_h2\">Goal</h2>\n\t    \t\t\t\t<p>Add and remove key-value pairs from the dictionary <strong>myDict</strong> so that it</p>\n\t    \t\t\t\t<p> matches the dictionary <strong>targetDict</strong>.</p>\n\t    \t\t\t\t<div id=\"gameStatus\"></div>\n\t    \t\t\t\t<Link to=\"/dictcode\" style={{textDecoration: 'none'}}>\n\t\t\t\t\t\t\t<button className=\"dictGameButton\" id=\"toDictTutorial\">Return to Tutorial</button>\n\t\t\t\t\t\t</Link>\n\t    \t\t\t\t<button className=\"dictGameButton\" id=\"dictShowHideCode\">Show/Hide Code</button>\n\t    \t\t\t\t<button className=\"dictGameButton\" id=\"dictPlayAgain\">Play Again</button>\n\t    \t\t\t\t<div id=\"gameActions\">\n\t\t\t\t\t\t<div id=\"dictModify\">\n\t    \t\t\t\t\t\t<h2 className=\"dictgame_h2\">Dictionary Add/Update</h2>\n\t    \t\t\t\t\t\t<label htmlFor=\"dictGameSelectAddKey\">Key</label>\n\t    \t\t\t\t\t\t<select id=\"dictGameSelectAddKey\"></select>\n\t    \t\t\t\t\t\t<label htmlFor=\"dictGameSelectAddValue\">Value</label>\n\t    \t\t\t\t\t\t<select id=\"dictGameSelectAddValue\"></select>\n\t    \t\t\t\t\t\t<div id=\"dictModifyStatus\"></div>\n\t    \t\t\t\t\t\t<button className=\"dictGameButton\" id=\"dictGameButtonModify\">Add Key and Value to Dictionary</button>\n\t   \t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"dictRemove\">\n\t    \t\t\t\t\t\t<h2 className=\"dictgame_h2\">Dictionary Remove</h2>\n\t    \t\t\t\t\t\t<label htmlFor=\"dictGameSelectRemoveKey\">Key</label>\n\t    \t\t\t\t\t\t<select id=\"dictGameSelectRemoveKey\"></select>\n\t    \t\t\t\t\t\t<div id=\"dictRemoveStatus\"></div>\n\t    \t\t\t\t\t\t<button className=\"dictGameButton\" id=\"dictGameButtonRemove\">Remove Key From Dictionary</button>\n\t   \t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t    \t\t\t</div>\n\t\t\t\t<div className=\"dictOuterContainer\">\n\t    \t\t\t\t<h2 className=\"dictgame_h2\">myDict</h2>\n\t\t \t\t\t<div id=\"dictContainer\">\n\t    \t\t\t\t        <div id=\"dictKeys\">\n\t\t\t \t\t\t\t<h3 className=\"dictgame_h3\">Keys</h3>\n\t    \t\t \t \t\t</div>\n\t    \t\t\t \t\t<div id=\"dictValues\">\n\t    \t\t \t\t\t\t<h3 className=\"dictgame_h3\">Values</h3>\n\t    \t\t\t \t\t</div>\n\t    \t\t\t\t</div>\n\t    \t\t\t</div>\n\t\t\t\t<div className=\"dictOuterContainer\">\n\t    \t\t\t\t<h2 className=\"dictgame_h2\">targetDict</h2>\n\t\t\t\t\t<div id=\"solDictContainer\">\n\t    \t\t\t\t\t <div id=\"dictKeys\">\n\t\t\t\t\t\t \t<h3 className=\"dictgame_h3\">Keys</h3>\n\t    \t\t\t\t\t </div>\n\t    \t\t\t\t\t <div id=\"dictValues\">\n\t    \t\t \t\t\t\t<h3 className=\"dictgame_h3\">Values</h3>\n\t    \t\t \t\t \t </div>\n\t   \t\t\t\t</div>\n\t    \t\t\t</div>\n\t\t\t\t<div id=\"dictCode\">\n              \t\t\t\t<h2 className=\"dictgame_h2\">Code For Actions</h2>\n              \t\t\t\t<div id=\"dictCodeOutput\"></div>\n\t    \t\t\t</div>\n\t    \t\t</div>\n\t   \t</div>\n\t   </body>\n        </Fragment>\n    );\n}\n\nexport default DictGame;\n","import React from \"react\";\nimport { Switch, Redirect, Route, useHistory } from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport Navbar from \"./components/Navbar\";\nimport NavbarBottom from \"./components/NavbarBottom\";\nimport Dashboard from \"./components/dashboard\";\nimport Settings from \"./components/boot\";\nimport PasswordReset from \"./components/PasswordReset\";\nimport Profile from \"./components/Profile\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ifgame from \"./components/ifgame\";\nimport IfCodeSnippets from \"./components/ifcode\";\nimport Shell from \"./components/Shell\";\nimport DictCodeSnippets from \"./components/dictcode\";\nimport DictGame from \"./components/DictGame\";\nimport \"./css/index.css\";\n\nfunction App() {\n  let history = useHistory();\n  const Logout = () => {\n    window.location.reload(false);\n    localStorage.clear();\n    return history.push(\"/\");\n  };\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  return (\n    <div>\n      <Navbar />\n      <div style={{ paddingTop: \"50px\", height: \"100%\" }}>\n        <Switch>\n          <PublicRoute restricted={false} exact path=\"/\">\n            <div className=\"welcome App\">\n              <h2>\n                Welcome, <span> {localStorage.getItem(\"username\")} </span>\n                <button onClick={Logout}> Logout </button>\n              </h2>\n            </div>\n          </PublicRoute>\n          <PublicRoute\n            restricted={true}\n            exact\n            path=\"/login\"\n            component={LoginForm}\n          />\n          <PublicRoute\n            restricted={true}\n            exact\n            path=\"/signup\"\n            component={RegisterForm}\n          />\n          <PrivateRoute path=\"/settings\" component={Settings} />\n          <PrivateRoute path=\"/passwordreset\" component={PasswordReset} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/about.html\" component={refreshPage} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n          <PrivateRoute path=\"/shell\" component={Shell}/>\n          <PrivateRoute path=\"/ifgame\" component={ifgame} />\n          <PrivateRoute path=\"/ifcode\" component={IfCodeSnippets} />\n\t  <PrivateRoute path=\"/dictcode\" component={DictCodeSnippets} />\n          <PrivateRoute path=\"/dictgame\" component={DictGame} />\n          <Route path=\"/logout\" component={Logout} />\n        </Switch>\n      </div>\n      <NavbarBottom />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}